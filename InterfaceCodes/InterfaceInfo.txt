import java.net.InterfaceAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.List;
public class InterfaceInfo {
  public static void main(String[] args) throws SocketException   {
    Enumeration<NetworkInterface> en = NetworkInterface.getNetworkInterfaces();
    while (en.hasMoreElements()) {
      NetworkInterface ni = en.nextElement();
      System.out.println("Display Name = " + ni.getDisplayName());
      System.out.println("Name = " + ni.getName());
      System.out.println("LoopBack :" +ni.isLoopback());
      System.out.println("Active :" +ni.isUp()); //Running up or not
      System.out.println("Multicast: " +ni.supportsMulticast());
      System.out.println("Point to point Protocol:" +ni.isPointToPoint());
      // (PPP) protocol construct a direct connection between two points
      System.out.println("Virtual:" + ni.isVirtual());
      System.out.println("MTU =" +ni.getMTU());
      // Maximum Transition Unit
      System.out.println("Hardware Address =" +ni.getHardwareAddress());
      List<InterfaceAddress> list = ni.getInterfaceAddresses();
      Iterator<InterfaceAddress> it = list.iterator();
      while (it.hasNext()) {
        InterfaceAddress ia = it.next();
        System.out.println("Address = " + ia.getAddress());
        System.out.println("Network Prefix Length = " + ia.getNetworkPrefixLength());
        System.out.println(" Broadcast= " + ia.getBroadcast());
      }
      System.out.println();  
    }
  }
}